1).Matchstick Houses:
	function matchHouses(step) {
	if(step===0){
		return 0;
	}else{
		return (step*5)+1
	}	
}

2).No Conditionals?:

	function flip(y) {
	if(y===0){
	return 1;	
	}
	else{
		return 0;
	}

3).Say "Hello" Say "Bye":

	function sayHelloBye(name, num) {
			let cname = name.charAt(0).toUpperCase() + name.slice(1);
	if(num === 1){
		return "Hello " + cname;
	}else if (num === 0){
		return "Bye " + cname;
	}
}

4).Using the "&&" Operator:

	function and(a, b) {
	if(a===false && b===false){
	return false;
	}else if(a===false|| b===false){
	return false ;
	}else
	return true;
	
}

5).Factorial of a Positive Integer:

	function factorial(z) {
	if(z===0||z===1){
		return 1;
	}else
		return (z*factorial(z-1));
	
}

6).Find the Perimeter of a Rectangle:

	function perimeter(height,width){
	return 2*(height+width);
}

7).Return the First Element in an Array:

	function getFirstValue(arr) {
	var a=arr[0];
	return a;
}

8).Return the Sum of Two Numbers:

	function addition(a, b) {
	return (a)+(b);	
}

9).Add up the Numbers from a Single Number:
	function addUp(num) {
	var add=0;
	for(var i=1;i<=num;i++){
		add=add+i;
	}
	return add;
	
}

10).function lessThan Or EqualToZer
	function lessThanOrEqualToZero(num) {
	if(num<=0){
		return true;
	}
	else{
		return false;
	}
	
}

11).Convert Hours into Seconds:	
	function howManySeconds(hours) {
	return 3600*hours;
	
}
=========================================================================================================
12). Equality of 3 Values:

	function equal(a, b, c) {
	if (a === b && a === c) {
	return 3;
	}else if (a === b || a === c || b === c) {
	return 2;
 }else{
	 return 0;
 }

13).How Much is True?

	function countTrue(arr) {
	var count=0;
	for(var i=0;i<=arr.length;i++){
		if(arr[i]===true){
			count++
		}
	}
	return count;
	 
}
	
14).Integer in Range?:

	function intWithinBounds(n, lower, upper) {
if(n>lower && n<upper && Number.isInteger(n) ){
		return true;
	}
	if(n==lower && n!==upper){
		return true;
	}
	else{
		return false;
	}
	
}

15).Square Every Digit:

	function squareDigits(n) {
	const str = n+"";
	const strArr = str.split("");
	let numberStr = "";
	for(let num of strArr) {
		numberStr+=Number(num*num);
	}
	return(Number(numberStr))
	
}

16).  Count Ones in Binary Representation of Integer:
 
	function countOnes(i) {
	 var n = 0;
  for (; i > 0; i >>>= 1) 
    if (i & 1) n++;
  return n;
	
}

17).Volume of a Cone:
	function coneVolume(h, r) {
	return Number((Math.PI * r * r * (h/3)).toFixed(2));
}

18).Reverse the Number:
	function rev(n) {
	var num = n.toString().split()
	var reversed = []
	for(i = num[0].length - 1; i > -1; i--){
		if(num[0][i] == '-'){
			continue;
		}
		else{
		reversed.push(num[0][i]);
		}
	}
	return reversed.join('');
	
}

19).Replace Vowel with Another Character:
	function replaceVowel(word){
return word.replace(/[aeiou]/g,(x)=>{
	let t=''
	switch(x){
		case 'a':
			t='1'
			break;
					case 'e':
			t='2'
			break;
					case 'i':
			t='3'
			break;
					case 'o':
			t='4'
			break;
					case 'u':
			t='5'
			break;
	}
	return t
})
}

20). Remove Duplicates from an Array:

	function removeDups(arr) {
  var returnArr = [];
  for(var i = 0; i < arr.length; i++) {
    if(returnArr.indexOf(arr[i]) === -1) {
      returnArr.push(arr[i]);
    }
  }
  return returnArr;
}

21). Count the Letters and Digits:

	function countAll(str) {
	let strings = 0, numbers = 0;
	for (let char of str) {
		if (char != ' ') {
			if (isNaN(char))
				strings++;
			else
				numbers++;		
		}
	}
	return {"LETTERS": strings, "DIGITS": numbers};
}

22).The Fizz Buzz Test:

	function fizzBuzz(number){
  let output = [];
	for(let i = 1; i <= number; i++) {
		if (i % 3 === 0 && i % 5 === 0) {
			output.push('FizzBuzz');
		} else if (i % 3 === 0) {
			output.push('Fizz');
		} else if (i % 5 === 0) {
			output.push('Buzz');
		} else {
		output.push(i);
	}
	}
	return output;
}

23).Find the Mean of All Digits:

	function mean(num) {
	var str = "" + Math.abs(num)
	var arr = str.split("")
	var sum = 0
	for(var i = 0; i < arr.length; i++)
		{
			sum += Number(arr[i])
		}
	return sum/arr.length
}

24).Xs and Os, Nobody Knows:

	function XO(str) {
  var x = 0, o = 0;
  for (var i = 0; i < str.length; i++) {
    if (str[i].toLowerCase() === 'x') {
      x += 1;
    } else if (str[i].toLowerCase() == 'o') {
      o += 1;
    }
  }
  return x === o;
}

25).Convert "Zero" and "One" to "1" and "0":

	function textToNumberBinary(str) {
  var word = str.toLowerCase().split(' ');
  if (word.length < 8) {
    return '';
  } else {
    var result = word.map(function(element) {
      if (element === 'one') {
        return 1;
      } else if (element === 'zero') {
        return 0;
      } else {
        return '';
      }
    }).join('').slice(0, Math.floor(word.length / 8) * 8);
  }
  if (result.length % 8 === 0) {
    return result;
  } else {
    return '';
  }
}

26).Return the End Letters of Numbers:


	const returnEndOfNumber = (num) => {
	let res = String(num) + "-";
	let bottomTwo = num % 100;
	const digits = bottomTwo <= 9 ? [0, bottomTwo] :
		String(bottomTwo).split("").map(_ => +_);
	
	if (digits[0] === 1) {
		return res + "TH";
	} else {
		switch (digits[1]) {
			case 1: return res + "ST";
			case 2: return res + "ND";
			case 3: return res + "RD";
			default: return res + "TH";
		}
	}
}

27).Capitalize the Names:

	function capMe(arr) {
	
  for (var i=0;i<arr.length;i++){
    var s = arr[i].substr(0,1).toUpperCase(); 
    s += arr[i].substr(1).toLowerCase();
    arr[i] = s;
  }
  
  
  return arr;

}

28).How Many "Prime Numbers" Are There?:

	function primeNumbers(num) {
	var arr=[];
	for(i=2;i<=num;i++){
		arr.push(i)
	}
	var k=1
	for (y=0;y<arr.length;y++){
		k++
		for (var i = y+k; i <= arr.length; i += k)
    	arr.splice(i, 1, 0);
	}
	return arr.filter(x=>x>0).length
}

29).Return the Sum of the Two Smallest Numbers:

	function sumTwoSmallestNums(arr) {
  var i;
  var smallest;
  var sSmallest;
  
  for(i = 0; i < arr.length; i++){
    if(arr[i] >= 0){
      sSmallest = smallest = arr[i];
      break;
    }
  }
  
  for(i = 0; i < arr.length; i++){
    if(arr[i] != smallest && arr[i] >= 0){
      sSmallest = arr[i];
      break;
    }
  }
  
  for(i = 0; i < arr.length; i++){
    if(arr[i] < smallest && arr[i] >= 0){
      smallest = arr[i];
    }
  }
  
  for(i = 0; i < arr.length; i++){
    if(arr[i] < sSmallest && arr[i] != smallest && arr[i] >= 0){
      sSmallest = arr[i];
    }
  }
  
	return smallest + sSmallest
}

30).Adding Numbers:
	function add(numberOne, numberTwo) {
	if(typeof numberOne !== 'string' || typeof numberTwo !== 'string' ||
		numberOne.length === 0 || numberTwo.length === 0) {
		return 'Invalid Operation';
	} else {
    return (+numberOne + +numberTwo).toString();
	}
}:







	
	